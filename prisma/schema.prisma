// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id String @id @default(uuid())
  name String
  password String
  email String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks Tasks[]
  projects Projects[]
  streaks Streaks[]
}

model Tasks {
  id String @id @default(uuid())
  description String
  user_id String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions FocusedSessions[]
  user Users @relation(fields: [user_id], references: [id])
}

model Projects {
  id String @id @default(uuid())
  name String
  user_id String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user Users @relation(fields: [user_id], references: [id])
  streaks StreakProjects[]
  sessions FocusedSessions[]
}

model Streaks {
  id String @id @default(uuid())
  name String
  user_id String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user Users @relation(fields: [user_id], references: [id])
  projects StreakProjects[]
}

model StreakProjects {
  name String
  streaks Streaks @relation(fields: [streak_id], references: [id])
  streak_id String
  projects Projects @relation(fields: [project_id], references: [id])
  project_id String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  @@id([streak_id, project_id])
}

model FocusedSessions {
  id String @id @default(uuid())
  task_id String
  project_id String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  task Tasks @relation(fields: [task_id], references: [id])
  project Projects? @relation(fields: [project_id], references: [id])
}